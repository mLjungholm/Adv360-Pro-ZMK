
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC     &kp N1    &kp N2     &kp N3     &kp N4  &kp N5               &tog 0                                                                                      &none  &kp N6    &kp N7     &kp N8    &kp N9           &kp N0        &kp DEL
 &kp EQUAL      &kp Q     &kp W      &kp E      &kp R   &kp T            &kp LC(V)                                                                           &kp SINGLE_QUOTE   &kp Y     &kp U      &kp I     &kp O            &kp P      &kp RA(W)
   &kp TAB      &kp A     &kp S      &kp D      &kp F   &kp G            &kp LC(C)  &kp LCTRL        &kp LALT                      &kp RIGHT_ALT  &kp RCTRL            &tog 1   &kp H     &kp J      &kp K     &kp L   &kp UNDERSCORE  &kp SEMICOLON
 &kp LSHFT      &kp Z     &kp X      &kp C      &kp V   &kp B                                        &kp LCMD                  &kp RIGHT_COMMAND                                &kp N     &kp M  &kp COMMA   &kp DOT  &kp RIGHT_SHIFT      &kp RA(Q)
     &mo 3  &kp GRAVE  &kp CAPS  &kp LC(Y)  &kp LC(Z)                     &kp BSPC      &mo 2  &kp LEFT_SHIFT                          &kp ENTER      &mo 2         &kp SPACE          &kp LEFT     &kp UP  &kp DOWN        &kp RIGHT      &kp RA(P)
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                &trans  &kp N6    &kp KP_NUM  &kp EQUAL  &kp SLASH      &kp STAR  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y  &kp NUMBER_7     &kp N8     &kp N9     &kp MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL     &trans   &kp H        &kp N4     &kp N5     &kp N6      &kp PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N        &kp N1     &kp N2     &kp N3  &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0                &kp UP   &kp DOWN    &kp DOT      &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
    &kp F1             &kp F2            &kp F3                &kp F4                 &kp F5           &kp F6                    &trans                                                                                  &trans         &kp F7            &kp F8         &kp F9           &kp F10     &kp F11          &kp F12
    &trans           &kp EXCL            &kp AT              &kp HASH               &kp DLLR      &kp PERCENT                 &kp PG_UP                                                                       &kp DOUBLE_QUOTES       &kp PIPE         &kp SLASH      &kp CARET      &kp QUESTION      &trans           &trans
 &kp TILDE  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp LEFT_BRACE                 &kp PG_DN  &kp LEFT_CONTROL  &trans                  &trans  &kp RIGHT_CONTROL  &kp DOUBLE_QUOTES       &kp STAR          &kp PLUS      &kp MINUS         &kp EQUAL      &trans        &kp COLON
    &trans             &trans          &kp HOME      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp RIGHT_BRACE                                              &trans                  &trans                                        &kp LESS_THAN  &kp GREATER_THAN  &kp BACKSLASH     &kp AMPERSAND      &trans           &trans
    &trans             &trans            &trans                &trans               &kp HOME                             &kp LEFT_SHIFT            &trans  &trans                  &trans             &trans    &kp RIGHT_SHIFT                     &kp C_VOL_UP   &kp C_VOL_DN  &kp C_PLAY_PAUSE  &kp C_STOP  &kp PRINTSCREEN
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
